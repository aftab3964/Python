def arithmetic_arranger(problems, show_answers=False):
    if len(problems) > 5:
        return "Error: Too many problems."
    if any("*" in i or "/" in i for i in problems):
        return "Error: Operator must be '+' or '-'."
    
    for i in problems:
        for j in i:
            if j in " ,+-" or j.isdigit():
                pass
            else:
                return 'Error: Numbers must only contain digits.'
    for i in problems:
        k = i.split()
        for j in k:
            if len(j) > 4:
                return 'Error: Numbers cannot be more than four digits.'
    first_operand = []
    operators = []
    second_operand = []
    width = []
    answers = []
    
    for i in problems:
        k = i.split()
        if len(k) != 3:
            return "Error: Each problem must contain two operands and one operator."
        op1, operator, op2 = k

        first_operand.append(op1)
        operators.append(operator)
        second_operand.append(op2)

        # Calculate answers for optional output
        if operator == "+":
            answers.append(str(int(op1) + int(op2)))
        elif operator == "-":
            answers.append(str(int(op1) - int(op2)))
        else:
        # Already handled above, but for safety:
            return "Error: Operator must be '+' or '-'."

        width.append(max(len(op1), len(op2))+2)

    line1 = ""
    line2 = ""
    line3 = ""
    line4 = ""

    for i in range(len(problems)):
        w = width[i]
        line1 += first_operand[i].rjust(w) + ("    " if i < len(problems)-1 else "")
        line2 += operators[i] + " " + second_operand[i].rjust(w-2) + ("    " if i < len(problems)-1 else "")
        line3 += "-"*w + ("    " if i < len(problems)-1 else "")
        if show_answers:
            line4 += answers[i].rjust(w) + ("    " if i < len(problems) - 1 else "")

    arranged_problems = "\n".join([line1, line2, line3] + ([line4] if show_answers else []))
    
    return arranged_problems

print(f'\n{arithmetic_arranger(["3201 + 48", "3801 - 2", "4502 + 4300", "1234 + 45"])}')
