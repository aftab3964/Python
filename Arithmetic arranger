def arithmetic_arranger(problems, show_answers=False):
    # Error 1: Too many problems
    if len(problems) > 5:
        return "Error: Too many problems."

    # Error 2: Only + or - allowed
    if any("*" in i or "/" in i for i in problems):
        return "Error: Operator must be '+' or '-'."
    
    first_operand = []
    second_operand = []
    operators = []
    answers = []
    widths = []

    for i in problems:
        k = i.split()
        # Error 3: Malformed input
        if len(k) != 3:
            return "Error: Each problem must contain two operands and one operator."
        op1, operator, op2 = k

        # Error 4: Only digits in operands
        if not op1.isdigit() or not op2.isdigit():
            return "Error: Numbers must only contain digits."

        # Error 5: Operand length
        if len(op1) > 4 or len(op2) > 4:
            return "Error: Numbers cannot be more than four digits."

        first_operand.append(op1)
        operators.append(operator)
        second_operand.append(op2)

        # Calculate answers for optional output
        if operator == "+":
            answers.append(str(int(op1) + int(op2)))
        elif operator == "-":
            answers.append(str(int(op1) - int(op2)))
        else:
            # Already handled above, but for safety:
            return "Error: Operator must be '+' or '-'."

        # Determine the width for formatting
        widths.append(max(len(op1), len(op2)) + 2)  # 2 for operator and space

    # Format each line
    line1 = ""
    line2 = ""
    line3 = ""
    line4 = ""
    for i in range(len(problems)):
        w = widths[i]
        line1 += first_operand[i].rjust(w) + ("    " if i < len(problems) - 1 else "")
        line2 += operators[i] + " " + second_operand[i].rjust(w - 2) + ("    " if i < len(problems) - 1 else "")
        line3 += "-" * w + ("    " if i < len(problems) - 1 else "")
        if show_answers:
            line4 += answers[i].rjust(w) + ("    " if i < len(problems) - 1 else "")

    arranged_problems = "\n".join([line1, line2, line3] + ([line4] if show_answers else []))
    return arranged_problems

# Example usage:
print(arithmetic_arranger(["32 + 698", "3801 - 2", "45 + 43", "123 + 49"], show_answers=True))
